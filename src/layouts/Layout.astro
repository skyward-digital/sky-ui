---
import { ArrowLeftIcon, ArrowRightIcon } from "@untitledui-icons/react/line"
import { Badge } from "#/ui/components/Badge"
import { Button } from "#/ui/components/Button"
import type { MarkdownHeading } from "astro"
import type { CollectionEntry } from "astro:content"

import "../styles/index.css"

import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro"
import RightSidebar from "../components/RightSidebar/RightSidebar.astro"
import { EDIT_URL } from "../consts"

type Props = CollectionEntry<"components">["data"] & {
  headings: MarkdownHeading[]
  next?: CollectionEntry<"components">
  prev?: CollectionEntry<"components">
}

const { title, description, client, links, headings, next, prev } = Astro.props
const currentPage = Astro.url.pathname
const currentFile = `src/content/docs${currentPage.replace(/\/$/, "")}.mdx`
const editUrl = `${EDIT_URL}/${currentFile}`
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <!-- <Header currentPage={currentPage} /> -->
    <main class="container relative flex justify-center pb-12 gap-8">
      <aside
        title="Site Navigation"
        class="hidden w-56 flex-col gap-6 pt-12 xl:sticky xl:top-0 xl:flex xl:h-screen"
      >
        <LeftSidebar currentPage={currentPage} />
      </aside>
      <div class="flex-1 pt-12 max-w-4xl">
        <!-- Breadcrumbs here -->
        <div class="flex gap-2 mb-4 items-end">
          <h1 class="text-4xl font-semibold leading-none">{title}</h1>
          {
            client && (
              <>
                <Badge size="sm" color="gray">
                  Requires JS
                </Badge>
              </>
            )
          }
        </div>
        <p class="text-xl text-gray-600 dark:text-gray-400 mb-4">
          {description}
        </p>

        <div class="flex gap-2">
          {
            links &&
              Object.entries(links).map((link) => (
                <Button href={link[1]} variant="outline" size="xs" className="capitalize">
                  {link[0]}
                </Button>
              ))
          }
        </div>

        <slot />

        <div class="flex justify-between items-center gap-4 mt-12">
          {
            prev ? (
              <Button href={`/${prev.collection}/${prev.slug}`} variant="ghost" size="sm">
                <ArrowLeftIcon />
                {prev.data.title}
              </Button>
            ) : (
              <div />
            )
          }
          {
            next ? (
              <Button href={`/${next.collection}/${next.slug}`} variant="ghost" size="sm">
                {next.data.title}
                <ArrowRightIcon />
              </Button>
            ) : (
              <div />
            )
          }
        </div>
      </div>
      <aside
        title="Table of Contents"
        class="hidden w-56 xl:sticky xl:top-0 xl:-mr-6 xl:block xl:h-screen xl:overflow-y-auto xl:py-12 xl:pr-6"
      >
        <RightSidebar headings={headings} editUrl={editUrl} />
      </aside>
    </main>
    <!-- <Footer path={currentFile} /> -->
  </body>
</html>
